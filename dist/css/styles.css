/*! normalize.css v3.0.2 | MIT License | git.io/normalize */img,legend{border:0}legend,td,th{padding:0}._33612487,.mnav{right:0;left:0;z-index:1000}html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}._25615576,[hidden],template{display:none}audio:not([controls]){display:none;height:0}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,optgroup,strong{font-weight:700}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{-moz-box-sizing:content-box;box-sizing:content-box;height:0}pre,textarea{overflow:auto}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none} input[type=reset],button,html input[type=button],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;box-sizing:content-box}.mnav,.mnav__link,.mnav__logo,.pageslice{box-sizing:border-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}._46146086,._49109951{margin:auto;text-align:center}legend{}table{border-collapse:collapse;border-spacing:0}._25615576{background-color:#1C6CE4;width:100%;height:9px}._12263913{height:100%;display:flex;align-items:center}ul._86869268{display:flex;list-style-type:none;height:100%}.navbar-item{padding-left:20px;height:100%}._49109951{padding-top:30px}h1._95052995{font-family:inherit;font-size:46px;margin:0 0 .2%;font-weight:500}h2._24105610{font-family:inherit;margin:0 15%;font-weight:300}*,.mnav__link,.mnav__title{font-family:roboto}._05255859{background-image:linear-gradient(to right,rgba(81,127,160,.17) 0,rgba(32,93,156,.45) 100%)}._19777562{display:flex;flex-direction:column}._33612487{position:fixed;top:0}._56097543{border-radius:2px;border-style:none;background-color:#3F51B5;margin-top:15px;font-size:35px;padding:10px;box-shadow:0 2px 2px 0 rgba(0,0,0,.14),0 3px 1px -2px rgba(0,0,0,.2),0 1px 5px 0 rgba(0,0,0,.12);outline:0}.pageslice{display:flex;align-items:center;position:relative;overflow:hidden}._51286714{margin:auto}._05906121,._40911087{margin-right:2%;margin-left:2%}._51286814{height:calc((100vh - 67px) * .2)}._40911087{width:50%;display:block}img._00431772{width:100%}._05906121{width:40%}.nobaseline img{vertical-align:bottom}.loc-callout-link:hover{text-decoration:underline}._33116058{padding-top:20px}._03064914{margin:auto}._12446073{height:300px;margin-top:100px;margin-bottom:100px}._30193573{display:flex;align-items:center}._14763650{background-color:rgba(0,0,0,.46)}._35511322{font-size:40px}._46815719{text-align:center;display:flex}._16691993,._70191851{display:block}._11316256{margin:auto}._16691993{font-size:larger;color:#fff;text-decoration:none}.hero__imgbx,.mnav{top:0;display:flex}._16691993:hover{text-decoration:underline}._09371838{font-size:20px}.image-text-slice{margin:100px}._91861681{height:50px;background-color:#5C6BC0;color:#FBFBFB;text-align:right;justify-content:flex-end;padding-right:20px}._39519672{height:200px;background-color:#9FA8DA}._49488300{margin:auto;font-size:35px}.linkreset{text-decoration:none;color:inherit}body{padding-top:67px}.stack-layer{height:100%;position:absolute;top:0;width:100%;color:#fff}.mnav{align-items:center;height:67px;padding:0 10px;background-color:#3F51B5;color:#fff;box-shadow:0 2px 5px rgba(0,0,0,.26);position:fixed}.mnav__logo{height:47px}.mnav__title{margin-left:10px;font-weight:600;letter-spacing:4px}.mnav__spacer{flex-grow:1}.mnav__link{text-decoration:none;color:inherit;font-size:17px;line-height:67px;margin-left:20px}.mnav__link:hover{color:#82B1FF;border-bottom:3px solid #fff}.mnav__link_callout{font-size:larger;font-weight:bolder}.hero{height:calc((100vh - 74px) * .7);position:relative}.hero__imgbx{height:100%;position:absolute;width:100%;color:#fff;overflow:hidden;align-items:center}.hero__img{width:100%;position:relative;top:-25px}
/*# sourceMappingURL=data:application/json;base64, */
